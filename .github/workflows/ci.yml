name: Build and Deploy Simulation

on: [push]

jobs:

  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7, 3.8, 3.9]
        database-name: [hello_web]
        database-password: [postgres]
        database-user: [postgres]
        database-host: [127.0.0.1]
        database-port: [5432]

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: ${{ matrix.database-name }}
          POSTGRES_USER: ${{ matrix.database-user }}
          POSTGRES_PASSWORD: ${{ matrix.database-password }}
        ports:
          - 5432:5432
        options:
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v2.4.0

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2.3.1
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.pip

    - name: Setup test database
      env:
        POSTGRES_DB_NAME: ${{ matrix.database-name }}
        POSTGRES_USER: ${{ matrix.database-user }}
        POSTGRES_PASSWORD: ${{ matrix.database-password }}
        POSTGRES_DB_HOST: ${{ matrix.database-host }}
        POSTGRES_DB_PORT: ${{ matrix.database-port }}
        POSTGRES_DB: ${{ matrix.database-name }}
        DJANGO_ALLOWED_HOSTS: localhost
      run: |
        export DATABASE_URL=postgres://${{ matrix.database-user }}:${{ matrix.database-password }}@${{ matrix.database-host }}:${{ matrix.database-port }}/${{ matrix.database-name }}
        export SECRET_KEY=test-secret-key
        export DEBUG=1

    - name: Run migrations
      env:
        DJANGO_ALLOWED_HOSTS: localhost
      run: |
        export DATABASE_URL=postgres://${{ matrix.database-user }}:${{ matrix.database-password }}@${{ matrix.database-host }}:${{ matrix.database-port }}/${{ matrix.database-name }}
        export SECRET_KEY=test-secret-key
        export DEBUG=1
        export GITHUB_WORKFLOW=True
        export MODE=workflow
        python manage.py makemigrations
        python manage.py migrate
        python manage.py migrate --run-syncdb
        python manage.py check

    - name: Run tests
      run: python manage.py test
      env:
        DATABASE_URL: postgres://${{ matrix.database-user }}:${{ matrix.database-password }}@${{ matrix.database-host }}:${{ matrix.database-port }}/${{ matrix.database-name }}
        SECRET_KEY: test-secret-key
        DEBUG: 1
        DJANGO_ALLOWED_HOSTS: localhost
        GITHUB_WORKFLOW: True
        MODE: workflow

    - name: Build Docker images
      run: |
        docker-compose -f docker-compose.yml build

    - name: Save Docker images as artifacts
      uses: actions/upload-artifact@v3
      with:
        name: django-docker-images
        path: |
          ./django_with_github_actions-app
          ./django_with_github_actions-nginx

    - name: Deploy simulation (Docker Compose)
      run: |
        docker-compose -f docker-compose.yml up -d
        sleep 15  # espera a que los servicios se inicien
        docker ps

    - name: Test web service (optional)
      run: |
        curl -f http://localhost:1337/ || echo "Web service not reachable yet"

    - name: Stop containers
      if: always()
      run: docker-compose -f "docker-compose.yml" down

